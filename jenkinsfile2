pipeline {
    agent any

    parameters {
        string(name: 'USERNAME', defaultValue: '', description: 'Enter the username to update in test.txt')
    }

    environment {
        GITHUB_TOKEN = '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'
        GITHUB_REPO = 'CharlesTamizharasan/ansible-course.git'
    }

    stages {
        stage('Update GitHub Repo') {
            steps {
                script {
                    git branch: 'jcloud-dev', url: 'https://github.com/CharlesTamizharasan/ansible-course.git'
                    // Create a new branch with a descriptive name
                    sh 'git checkout -b feature-branch-${currentBuild.number}'
                    // Set Git user details
                    sh 'git config user.name "Charles"'
                    sh 'git config user.email "charlesit24@gmail.com"'
                    sh 'cat test.txt'
                    // Git operations
                    //sh 'git add .'
                    //sh 'git commit -m "Updated"'
                    //sh 'git push origin main'
                }
            }
        }
        stage('Read File') {
            steps {
                script {
                    def filePath = "terraform/test1.txt"
                    def fileContent = sh(script: "cat ${filePath}", returnStdout: true).trim()
                    echo "File Content:\n${fileContent}"
                }
            }
        }
        stage('Write File') {
            steps {
                script {
                    def filePath = "terraform/test2.txt"
                    def fileContent =  "- username: $USERNAME\n" +
                                          "comment: $USERNAME\n" +
                                          "group: core-eng\n" +
                                          "groups: engineering\n" +
                                          "homedir: /home/$USERNAME\n" +
                                          "email_address: $USERNAME@juniper.net\n" +
                                          "shell: /bin/zsh\n" +
                                          "ssh_public_key: $USERNAME\n" +
                                          "k8s_access: true\n" +
                                          "elevated_k8s_access: true"

                    // Use the writeFile step to write content to the file
                    writeFile file: filePath, text: fileContent

                    echo "File has been written:"
                    sh "cat ${filePath}"
                    // Git operations
                    sh 'git add .'
                    sh 'git commit -m "Update"'
                    sh 'git push origin jcloud-dev'
                }
            }
        }
    }
}
