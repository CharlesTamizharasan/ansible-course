pipeline {
    agent any

    parameters {
        string(name: 'USERNAME_TO_ADD', defaultValue: '', description: 'Enter the username to add to text file')
    }

    environment {
        GITHUB_TOKEN = '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'
        GITHUB_REPO = 'CharlesTamizharasan/ansible-course.git'
        FILE_PATH = 'test'
        JSON_FILE = 'update.json'
    }

    stages {
        stage('Debug') {
            steps {
                script {
                    echo "GitHub Token: ${env.GITHUB_TOKEN}"
                    echo "GitHub Repo: ${env.GITHUB_REPO}"
                    echo "File Path: ${env.FILE_PATH}"
                    echo "Username to Add: ${params.USERNAME_TO_ADD}"
                }
            }
        }

stage('Create JSON File') {
            steps {
                script {
                    def apiUrl = "https://api.github.com/repos/${env.GITHUB_REPO}/contents/${env.FILE_PATH}"
                    def existingContent = sh(script: "curl -s -H 'Authorization: token ${env.GITHUB_TOKEN}' ${apiUrl} | jq -r .content | base64 -d", returnStdout: true).trim()

                    // Append the new username to the existing content
                    def updatedContent = existingContent + "\\n${params.USERNAME_TO_ADD}"

                    // Get the SHA value separately
                    def shaValue = sh(script: "curl -s -H 'Authorization: token ${env.GITHUB_TOKEN}' ${apiUrl} | jq -r .sha", returnStdout: true).trim()

                    // Create a JSON file with the update content and SHA value
                    writeFile file: "${env.JSON_FILE}", text: """
                    {
                        "message": "Update text file",
                        "content": "${updatedContent}",
                        "sha": "${shaValue}"
                    }
                    """
                }
            }
        }

        stage('Update GitHub File') {
            steps {
                script {
                    def apiUrl = "https://api.github.com/repos/${env.GITHUB_REPO}/contents/${env.FILE_PATH}"

                    // Update the file on GitHub using the JSON file
                    sh """
                        curl -s -X PUT \
                            -H 'Authorization: token ${env.GITHUB_TOKEN}' \
                            -H 'Content-Type: application/json' \
                            --data @${env.JSON_FILE} \
                            ${apiUrl}
                    """
                }
            }
        }
    }
}
